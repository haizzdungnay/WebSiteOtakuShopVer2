import { PrismaClient } from '../app/generated/prisma'
import bcrypt from 'bcryptjs'

const prisma = new PrismaClient()

async function main() {
  console.log('üå± Starting seed...\n')

  // Clear old data
  console.log('üóëÔ∏è  Clearing old data...')
  await prisma.reviewVote.deleteMany()
  await prisma.review.deleteMany()
  await prisma.orderItem.deleteMany()
  await prisma.order.deleteMany()
  await prisma.cartItem.deleteMany()
  await prisma.wishlist.deleteMany()
  await prisma.payment.deleteMany()
  await prisma.shipping.deleteMany()
  await prisma.coupon.deleteMany()
  await prisma.address.deleteMany()
  await prisma.product.deleteMany()
  await prisma.category.deleteMany()
  await prisma.user.deleteMany()
  await prisma.admin.deleteMany()
  console.log('‚úÖ Cleared old data\n')

  // ===== 1. ADMIN =====
  console.log('üë§ Creating admin...')
  const adminPassword = await bcrypt.hash('admin123', 10)
  const admin = await prisma.admin.create({
    data: {
      username: 'admin',
      passwordHash: adminPassword,
      fullName: 'Admin Otaku Shop',
      email: 'admin@otakushop.com'
    }
  })
  console.log(`‚úÖ Created admin: ${admin.username}\n`)

  // ===== 2. CATEGORIES =====
  console.log('üìÅ Creating categories...')
  const categoriesData = [
    { 
      name: 'Figures & Models', 
      slug: 'figures-models', 
      description: 'M√¥ h√¨nh nh√¢n v·∫≠t anime, game cao c·∫•p'
    },
    { 
      name: 'Gaming Gear', 
      slug: 'gaming-gear', 
      description: 'Ph·ª• ki·ªán gaming: chu·ªôt, b√†n ph√≠m, tai nghe'
    },
    { 
      name: 'Manga & Comics', 
      slug: 'manga-comics', 
      description: 'Truy·ªán tranh Nh·∫≠t B·∫£n, H√†n Qu·ªëc'
    },
    { 
      name: 'Apparel', 
      slug: 'apparel', 
      description: '√Åo thun, hoodie, m≈© anime/game'
    },
    { 
      name: 'Collectibles', 
      slug: 'collectibles', 
      description: 'ƒê·ªì s∆∞u t·∫ßm, poster, keychain'
    },
  ]

  for (const cat of categoriesData) {
    await prisma.category.create({ data: cat })
  }
  console.log('‚úÖ Created 5 categories\n')

  // ===== 3. PRODUCTS =====
  console.log('üì¶ Creating products...')
  const figuresCategory = await prisma.category.findUnique({ where: { slug: 'figures-models' } })
  const gearCategory = await prisma.category.findUnique({ where: { slug: 'gaming-gear' } })
  const mangaCategory = await prisma.category.findUnique({ where: { slug: 'manga-comics' } })
  const apparelCategory = await prisma.category.findUnique({ where: { slug: 'apparel' } })

  const productsData = [
    {
      name: 'Demon Slayer Tanjiro Figure',
      slug: 'demon-slayer-tanjiro-figure',
      description: 'M√¥ h√¨nh Tanjiro Kamado cao 20cm, ch·∫•t l∆∞·ª£ng cao v·ªõi chi ti·∫øt s·∫Øc n√©t. S·∫£n ph·∫©m ch√≠nh h√£ng, m√†u s·∫Øc s·ªëng ƒë·ªông.',
      price: 450000,
      comparePrice: 550000,
      stockQuantity: 15,
      images: ['https://placehold.co/600x600/EF4444/FFF?text=Tanjiro'],
      categoryId: figuresCategory!.id,
      featured: true,
      reviewCount: 8,
      averageRating: 4.8
    },
    {
      name: 'Genshin Impact Hu Tao Figure',
      slug: 'genshin-impact-hu-tao-figure',
      description: 'M√¥ h√¨nh Hu Tao - Genshin Impact, cao 18cm, chi ti·∫øt tinh x·∫£o.',
      price: 520000,
      comparePrice: 620000,
      stockQuantity: 10,
      images: ['https://placehold.co/600x600/8B5CF6/FFF?text=Hu+Tao'],
      categoryId: figuresCategory!.id,
      featured: true,
      reviewCount: 5,
      averageRating: 4.6
    },
    {
      name: 'One Piece Luffy Gear 5 Figure',
      slug: 'one-piece-luffy-gear5',
      description: 'M√¥ h√¨nh Luffy Gear 5 phi√™n b·∫£n gi·ªõi h·∫°n, cao 22cm.',
      price: 680000,
      stockQuantity: 8,
      images: ['https://placehold.co/600x600/3B82F6/FFF?text=Luffy'],
      categoryId: figuresCategory!.id,
      reviewCount: 3,
      averageRating: 5.0
    },
    {
      name: 'Razer DeathAdder V3 Pro',
      slug: 'razer-deathadder-v3-pro',
      description: 'Chu·ªôt gaming wireless cao c·∫•p, c·∫£m bi·∫øn Focus Pro 30K.',
      price: 3500000,
      stockQuantity: 12,
      images: ['https://placehold.co/600x600/10B981/FFF?text=Razer'],
      categoryId: gearCategory!.id,
      featured: true,
      reviewCount: 12,
      averageRating: 4.7
    },
    {
      name: 'Logitech G Pro X Superlight',
      slug: 'logitech-g-pro-x-superlight',
      description: 'Chu·ªôt gaming nh·∫π nh·∫•t (63g), pin 70 gi·ªù.',
      price: 3200000,
      stockQuantity: 8,
      images: ['https://placehold.co/600x600/6366F1/FFF?text=Logitech'],
      categoryId: gearCategory!.id,
      reviewCount: 7,
      averageRating: 4.5
    },
    {
      name: 'Attack on Titan Box Set',
      slug: 'attack-on-titan-box-set',
      description: 'B·ªô truy·ªán Attack on Titan ho√†n ch·ªânh 34 t·∫≠p.',
      price: 2800000,
      comparePrice: 3500000,
      stockQuantity: 5,
      images: ['https://placehold.co/600x600/F59E0B/FFF?text=AOT'],
      categoryId: mangaCategory!.id,
      reviewCount: 4,
      averageRating: 4.9
    },
    {
      name: 'Spy x Family Vol.1',
      slug: 'spy-x-family-vol1',
      description: 'Spy x Family t·∫≠p 1 b·∫£n ti·∫øng Vi·ªát.',
      price: 45000,
      stockQuantity: 30,
      images: ['https://placehold.co/600x600/EC4899/FFF?text=Spy'],
      categoryId: mangaCategory!.id,
      featured: true,
      reviewCount: 15,
      averageRating: 4.3
    },
    {
      name: 'Naruto Akatsuki Hoodie',
      slug: 'naruto-akatsuki-hoodie',
      description: '√Åo hoodie Akatsuki ch·∫•t cotton cao c·∫•p.',
      price: 350000,
      stockQuantity: 20,
      images: ['https://placehold.co/600x600/EF4444/000?text=Akatsuki'],
      categoryId: apparelCategory!.id,
      reviewCount: 6,
      averageRating: 4.4
    },
    {
      name: 'Ghibli Totoro T-Shirt',
      slug: 'ghibli-totoro-tshirt',
      description: '√Åo thun Totoro 100% cotton.',
      price: 180000,
      stockQuantity: 50,
      images: ['https://placehold.co/600x600/10B981/FFF?text=Totoro'],
      categoryId: apparelCategory!.id,
      featured: true,
      reviewCount: 10,
      averageRating: 4.2
    },
  ]

  const createdProducts = []
  for (const product of productsData) {
    const p = await prisma.product.create({ data: product })
    createdProducts.push(p)
  }
  console.log('‚úÖ Created 9 products\n')

  // ===== 4. TEST USERS =====
  console.log('üë§ Creating test users...')
  const userPassword = await bcrypt.hash('user123', 10)
  
  const user1 = await prisma.user.create({
    data: {
      email: 'user@example.com',
      passwordHash: userPassword,
      fullName: 'Nguy·ªÖn VƒÉn A',
      phone: '0901234567',
      gender: 'MALE',
      dateOfBirth: new Date('1995-05-15')
    }
  })

  const user2 = await prisma.user.create({
    data: {
      email: 'user2@example.com',
      passwordHash: userPassword,
      fullName: 'Tr·∫ßn Th·ªã B',
      phone: '0909876543',
      gender: 'FEMALE',
      dateOfBirth: new Date('1998-08-20')
    }
  })

  const user3 = await prisma.user.create({
    data: {
      email: 'user3@example.com',
      passwordHash: userPassword,
      fullName: 'L√™ VƒÉn C',
      phone: '0905555555',
      gender: 'MALE'
    }
  })

  console.log('‚úÖ Created 3 test users\n')

  // ===== 5. ADDRESSES =====
  console.log('üìç Creating addresses...')
  await prisma.address.createMany({
    data: [
      {
        userId: user1.id,
        label: 'Home',
        fullName: 'Nguy·ªÖn VƒÉn A',
        phone: '0901234567',
        address: '123 Nguy·ªÖn VƒÉn Linh',
        ward: 'T√¢n Phong',
        district: 'Qu·∫≠n 7',
        city: 'H·ªì Ch√≠ Minh',
        isDefault: true
      },
      {
        userId: user1.id,
        label: 'Office',
        fullName: 'Nguy·ªÖn VƒÉn A',
        phone: '0901234567',
        address: '456 L√™ VƒÉn Vi·ªát',
        ward: 'Hi·ªáp Ph√∫',
        district: 'Qu·∫≠n 9',
        city: 'H·ªì Ch√≠ Minh',
        isDefault: false
      }
    ]
  })
  console.log('‚úÖ Created 2 addresses\n')

  // ===== 6. COUPONS =====
  console.log('üéüÔ∏è  Creating coupons...')
  await prisma.coupon.createMany({
    data: [
      {
        code: 'WELCOME10',
        type: 'PERCENTAGE',
        value: 10,
        minOrder: 200000,
        maxDiscount: 50000,
        validFrom: new Date('2025-01-01'),
        validTo: new Date('2025-12-31'),
        usageLimit: 100,
        description: 'Gi·∫£m 10% cho ƒë∆°n h√†ng ƒë·∫ßu ti√™n (t·ªëi ƒëa 50k)',
        isActive: true
      },
      {
        code: 'FREESHIP',
        type: 'FIXED_AMOUNT',
        value: 30000,
        minOrder: 500000,
        validFrom: new Date('2025-01-01'),
        validTo: new Date('2025-06-30'),
        description: 'Mi·ªÖn ph√≠ ship cho ƒë∆°n t·ª´ 500k',
        isActive: true
      },
      {
        code: 'NEWYEAR2025',
        type: 'PERCENTAGE',
        value: 20,
        minOrder: 1000000,
        maxDiscount: 200000,
        validFrom: new Date('2025-01-01'),
        validTo: new Date('2025-01-31'),
        usageLimit: 50,
        description: 'T·∫øt sale 20% cho ƒë∆°n t·ª´ 1 tri·ªáu',
        isActive: true
      }
    ]
  })
  console.log('‚úÖ Created 3 coupons\n')

  // ===== 7. SAMPLE REVIEWS =====
  console.log('‚≠ê Creating sample reviews...')
  
  // Reviews for Tanjiro Figure
  const reviewsData = [
    {
      productId: createdProducts[0].id, // Tanjiro
      userId: user1.id,
      rating: 5,
      title: 'Tuy·ªát v·ªùi!',
      comment: 'M√¥ h√¨nh r·∫•t ƒë·∫πp, chi ti·∫øt s·∫Øc n√©t. ƒê√≥ng g√≥i c·∫©n th·∫≠n, ship nhanh. R·∫•t h√†i l√≤ng v·ªõi s·∫£n ph·∫©m!',
      isVerified: true,
      isApproved: true,
      helpfulCount: 12
    },
    {
      productId: createdProducts[0].id, // Tanjiro
      userId: user2.id,
      rating: 5,
      title: 'Ch·∫•t l∆∞·ª£ng cao',
      comment: 'Mua t·∫∑ng em, em r·∫•t th√≠ch. M√†u s·∫Øc ƒë·∫πp, ch·∫•t li·ªáu t·ªët.',
      isVerified: true,
      isApproved: true,
      helpfulCount: 8
    },
    {
      productId: createdProducts[0].id, // Tanjiro
      userId: user3.id,
      rating: 4,
      title: 'T·ªët',
      comment: 'S·∫£n ph·∫©m ok, nh∆∞ng gi√° h∆°i cao.',
      isVerified: false,
      isApproved: true,
      helpfulCount: 3
    },
    
    // Reviews for Razer Mouse
    {
      productId: createdProducts[3].id, // Razer
      userId: user1.id,
      rating: 5,
      title: 'Gaming c·ª±c ƒë·ªânh',
      comment: 'Chu·ªôt r·∫•t nh·∫°y, pin tr√¢u, thi·∫øt k·∫ø ƒë·∫πp. ƒê√°ng ti·ªÅn!',
      isVerified: true,
      isApproved: true,
      helpfulCount: 25
    },
    {
      productId: createdProducts[3].id, // Razer
      userId: user2.id,
      rating: 4,
      title: 'T·ªët nh∆∞ng ƒë·∫Øt',
      comment: 'Ch·∫•t l∆∞·ª£ng t·ªët, nh∆∞ng gi√° h∆°i ch√°t. Ph√π h·ª£p pro player.',
      isVerified: true,
      isApproved: true,
      helpfulCount: 10
    },

    // Reviews for Spy x Family
    {
      productId: createdProducts[6].id, // Spy x Family
      userId: user2.id,
      rating: 5,
      title: 'Truy·ªán hay!',
      comment: 'N·ªôi dung h√†i h∆∞·ªõc, d·ªÖ th∆∞∆°ng. B·∫£n in ƒë·∫πp, gi·∫•y t·ªët.',
      isVerified: true,
      isApproved: true,
      helpfulCount: 18
    },
    {
      productId: createdProducts[6].id, // Spy x Family
      userId: user3.id,
      rating: 4,
      title: '·ªîn',
      comment: 'Truy·ªán hay, gi√° h·ª£p l√Ω. Giao h√†ng nhanh.',
      isVerified: true,
      isApproved: true,
      helpfulCount: 5
    },

    // Review for Totoro T-Shirt
    {
      productId: createdProducts[8].id, // Totoro
      userId: user1.id,
      rating: 4,
      title: '√Åo ƒë·∫πp',
      comment: 'Ch·∫•t li·ªáu cotton m·ªÅm, form chu·∫©n. H∆°i d·ªÖ phai m√†u sau v√†i l·∫ßn gi·∫∑t.',
      isVerified: true,
      isApproved: true,
      helpfulCount: 7
    }
  ]

  for (const review of reviewsData) {
    await prisma.review.create({ data: review })
  }
  console.log('‚úÖ Created 8 sample reviews\n')

  console.log('üéâ Seed completed!\n')
  console.log('üìä Summary:')
  console.log('  - Admin: admin / admin123')
  console.log('  - Users: user@example.com / user123 (+ 2 more)')
  console.log('  - Categories: 5')
  console.log('  - Products: 9 (with review stats)')
  console.log('  - Addresses: 2')
  console.log('  - Coupons: 3')
  console.log('  - Reviews: 8')
  console.log('')
  console.log('üîê Login Credentials:')
  console.log('  Admin: admin / admin123')
  console.log('  User 1: user@example.com / user123')
  console.log('  User 2: user2@example.com / user123')
  console.log('  User 3: user3@example.com / user123')
}

main()
  .catch((e) => {
    console.error('‚ùå Seed failed:', e)
    process.exit(1)
  })
  .finally(async () => {
    await prisma.$disconnect()
  })